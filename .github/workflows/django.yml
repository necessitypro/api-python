name: Django Continuous Integration Workflow

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  DEBUG: TRUE
  SECRET_KEY: my-secret-key
  JWT_SECRET: my-jwt-secret
  POSTGRES_DATABASE: postgres_github_actions
  POSTGRES_USER: postgres
  POSTGRES_PASSWORD: postgres
  POSTGRES_HOST: 127.0.0.1
  POSTGRES_PORT: 5432

jobs:
  build:

    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres_github_actions
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    strategy:
      max-parallel: 1
      matrix:
        python-version: [3.9]

    steps:
    - name: Check out repository code
      uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install pipenv
      run: |
        python -m pip install --upgrade pipenv wheel
    - id: cache-pipenv
      uses: actions/cache@v1
      with:
        path: ~/.local/share/virtualenvs
        key: ${{ runner.os }}-pipenv-${{ hashFiles('**/Pipfile.lock') }}
    - name: Install dependencies
      if: steps.cache-pipenv.outputs.cache-hit != 'true'
      run: |
        pipenv install --deploy --dev
    - name: Run Tests
      run: |
        pipenv run pytest --cov -v
